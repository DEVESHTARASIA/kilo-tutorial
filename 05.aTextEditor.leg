~~~

row-insert-char c1

diff --git a/kilo.c b/kilo.c
index 21209c2..db10039 100644
--- a/kilo.c
+++ b/kilo.c
@@ -224,6 +224,15 @@ void editorAppendRow(char *s, size_t len) {
   E.numrows++;
 }
 
+void editorRowInsertChar(erow *row, int at, int c) {
+  if (at < 0 || at > row->size) at = row->size;
+  row->chars = realloc(row->chars, row->size + 2);
+  memmove(&row->chars[at + 1], &row->chars[at], row->size - at + 1);
+  row->size++;
+  row->chars[at] = c;
+  editorUpdateRow(row);
+}
+
 /*** file i/o ***/
 
 void editorOpen(char *filename) {

~~~

editor-insert-char c1

diff --git a/kilo.c b/kilo.c
index db10039..a1b7948 100644
--- a/kilo.c
+++ b/kilo.c
@@ -233,6 +233,16 @@ void editorRowInsertChar(erow *row, int at, int c) {
   editorUpdateRow(row);
 }
 
+/*** editor operations ***/
+
+void editorInsertChar(int c) {
+  if (E.cy == E.numrows) {
+    editorAppendRow("", 0);
+  }
+  editorRowInsertChar(&E.row[E.cy], E.cx, c);
+  E.cx++;
+}
+
 /*** file i/o ***/
 
 void editorOpen(char *filename) {

~~~

key-insert-char c2

diff --git a/kilo.c b/kilo.c
index a1b7948..406234f 100644
--- a/kilo.c
+++ b/kilo.c
@@ -484,6 +484,10 @@ void editorProcessKeypress() {
     case ARROW_RIGHT:
       editorMoveCursor(c);
       break;
+
+    default:
+      editorInsertChar(c);
+      break;
   }
 }
 

~~~

block-special-chars c2

diff --git a/kilo.c b/kilo.c
index 406234f..598bab9 100644
--- a/kilo.c
+++ b/kilo.c
@@ -24,6 +24,7 @@
 #define CTRL_KEY(k) ((k) & 0x1f)
 
 enum editorKey {
+  BACKSPACE = 127,
   ARROW_LEFT = 1000,
   ARROW_RIGHT,
   ARROW_UP,
@@ -447,6 +448,10 @@ void editorProcessKeypress() {
   int c = editorReadKey();
 
   switch (c) {
+    case '\r':
+      /* TODO */
+      break;
+
     case CTRL_KEY('q'):
       write(STDOUT_FILENO, "\x1b[2J", 4);
       write(STDOUT_FILENO, "\x1b[H", 3);
@@ -462,6 +467,12 @@ void editorProcessKeypress() {
         E.cx = E.row[E.cy].size;
       break;
 
+    case BACKSPACE:
+    case CTRL_KEY('h'):
+    case DEL_KEY:
+      /* TODO */
+      break;
+
     case PAGE_UP:
     case PAGE_DOWN:
       {
@@ -485,6 +496,10 @@ void editorProcessKeypress() {
       editorMoveCursor(c);
       break;
 
+    case CTRL_KEY('l'):
+    case '\x1b':
+      break;
+
     default:
       editorInsertChar(c);
       break;

~~~

rows-to-string c1

diff --git a/kilo.c b/kilo.c
index 598bab9..2fb3b25 100644
--- a/kilo.c
+++ b/kilo.c
@@ -246,6 +246,25 @@ void editorInsertChar(int c) {
 
 /*** file i/o ***/
 
+char *editorRowsToString(int *buflen) {
+  int totlen = 0;
+  int j;
+  for (j = 0; j < E.numrows; j++)
+    totlen += E.row[j].size + 1;
+  *buflen = totlen;
+
+  char *buf = malloc(totlen);
+  char *p = buf;
+  for (j = 0; j < E.numrows; j++) {
+    memcpy(p, E.row[j].chars, E.row[j].size);
+    p += E.row[j].size;
+    *p = '\n';
+    p++;
+  }
+
+  return buf;
+}
+
 void editorOpen(char *filename) {
   free(E.filename);
   E.filename = strdup(filename);

~~~

save c1

diff --git a/kilo.c b/kilo.c
index 2fb3b25..3af208e 100644
--- a/kilo.c
+++ b/kilo.c
@@ -6,6 +6,7 @@
 
 #include <ctype.h>
 #include <errno.h>
+#include <fcntl.h>
 #include <stdio.h>
 #include <stdarg.h>
 #include <stdlib.h>
@@ -285,6 +286,19 @@ void editorOpen(char *filename) {
   fclose(fp);
 }
 
+void editorSave() {
+  if (E.filename == NULL) return;
+
+  int len;
+  char *buf = editorRowsToString(&len);
+
+  int fd = open(E.filename, O_RDWR | O_CREAT, 0644);
+  ftruncate(fd, len);
+  write(fd, buf, len);
+  close(fd);
+  free(buf);
+}
+
 /*** append buffer ***/
 
 struct abuf {

~~~

ctrl-s c2

diff --git a/kilo.c b/kilo.c
index 3af208e..8625bd6 100644
--- a/kilo.c
+++ b/kilo.c
@@ -491,6 +491,10 @@ void editorProcessKeypress() {
       exit(0);
       break;
 
+    case CTRL_KEY('s'):
+      editorSave();
+      break;
+
     case HOME_KEY:
       E.cx = 0;
       break;

~~~

save-errors c2

diff --git a/kilo.c b/kilo.c
index 8625bd6..369cf36 100644
--- a/kilo.c
+++ b/kilo.c
@@ -293,9 +293,17 @@ void editorSave() {
   char *buf = editorRowsToString(&len);
 
   int fd = open(E.filename, O_RDWR | O_CREAT, 0644);
-  ftruncate(fd, len);
-  write(fd, buf, len);
-  close(fd);
+  if (fd != -1) {
+    if (ftruncate(fd, len) != -1) {
+      if (write(fd, buf, len) == len) {
+        close(fd);
+        free(buf);
+        return;
+      }
+    }
+    close(fd);
+  }
+
   free(buf);
 }
 

~~~

save-status-message c0

diff --git a/kilo.c b/kilo.c
index 369cf36..53ae3fa 100644
--- a/kilo.c
+++ b/kilo.c
@@ -298,6 +298,7 @@ void editorSave() {
       if (write(fd, buf, len) == len) {
         close(fd);
         free(buf);
+        editorSetStatusMessage("%d bytes written to disk", len);
         return;
       }
     }
@@ -305,6 +306,7 @@ void editorSave() {
   }
 
   free(buf);
+  editorSetStatusMessage("Can't save! I/O error: %s", strerror(errno));
 }
 
 /*** append buffer ***/
@@ -576,7 +578,7 @@ int main(int argc, char *argv[]) {
     editorOpen(argv[1]);
   }
 
-  editorSetStatusMessage("HELP: Ctrl-Q = quit");
+  editorSetStatusMessage("HELP: Ctrl-S = save | Ctrl-Q = quit");
 
   while (1) {
     editorRefreshScreen();

~~~

prototypes c2

diff --git a/kilo.c b/kilo.c
index 53ae3fa..ca8f69e 100644
--- a/kilo.c
+++ b/kilo.c
@@ -63,6 +63,10 @@ struct editorConfig {
 
 struct editorConfig E;
 
+/*** prototypes ***/
+
+void editorSetStatusMessage(const char *fmt, ...);
+
 /*** terminal ***/
 
 void die(const char *s) {

~~~

dirty c1

diff --git a/kilo.c b/kilo.c
index ca8f69e..082538b 100644
--- a/kilo.c
+++ b/kilo.c
@@ -55,6 +55,7 @@ struct editorConfig {
   int screencols;
   int numrows;
   erow *row;
+  int dirty;
   char *filename;
   char statusmsg[80];
   time_t statusmsg_time;
@@ -567,6 +568,7 @@ void initEditor() {
   E.coloff = 0;
   E.numrows = 0;
   E.row = NULL;
+  E.dirty = 0;
   E.filename = NULL;
   E.statusmsg[0] = '\0';
   E.statusmsg_time = 0;

~~~

show-dirty c1

diff --git a/kilo.c b/kilo.c
index 082538b..4c21ba3 100644
--- a/kilo.c
+++ b/kilo.c
@@ -393,8 +393,9 @@ void editorDrawRows(struct abuf *ab) {
 void editorDrawStatusBar(struct abuf *ab) {
   abAppend(ab, "\x1b[7m", 4);
   char status[80], rstatus[80];
-  int len = snprintf(status, sizeof(status), "%.20s - %d lines",
-    E.filename ? E.filename : "[No Name]", E.numrows);
+  int len = snprintf(status, sizeof(status), "%.20s - %d lines %s",
+    E.filename ? E.filename : "[No Name]", E.numrows,
+    E.dirty ? "(modified)" : "");
   int rlen = snprintf(rstatus, sizeof(rstatus), "%d/%d",
     E.cy + 1, E.numrows);
   if (len > E.screencols) len = E.screencols;

~~~

increment-dirty c2

diff --git a/kilo.c b/kilo.c
index 4c21ba3..35932e4 100644
--- a/kilo.c
+++ b/kilo.c
@@ -229,6 +229,7 @@ void editorAppendRow(char *s, size_t len) {
   editorUpdateRow(&E.row[at]);
 
   E.numrows++;
+  E.dirty++;
 }
 
 void editorRowInsertChar(erow *row, int at, int c) {
@@ -238,6 +239,7 @@ void editorRowInsertChar(erow *row, int at, int c) {
   row->size++;
   row->chars[at] = c;
   editorUpdateRow(row);
+  E.dirty++;
 }
 
 /*** editor operations ***/

~~~

reset-dirty c2

diff --git a/kilo.c b/kilo.c
index 35932e4..4e1040b 100644
--- a/kilo.c
+++ b/kilo.c
@@ -291,6 +291,7 @@ void editorOpen(char *filename) {
   }
   free(line);
   fclose(fp);
+  E.dirty = 0;
 }
 
 void editorSave() {
@@ -305,6 +306,7 @@ void editorSave() {
       if (write(fd, buf, len) == len) {
         close(fd);
         free(buf);
+        E.dirty = 0;
         editorSetStatusMessage("%d bytes written to disk", len);
         return;
       }

~~~

quit-confirmation c2

diff --git a/kilo.c b/kilo.c
index 4e1040b..aa8dafc 100644
--- a/kilo.c
+++ b/kilo.c
@@ -21,6 +21,7 @@
 
 #define KILO_VERSION "0.0.1"
 #define KILO_TAB_STOP 8
+#define KILO_QUIT_TIMES 3
 
 #define CTRL_KEY(k) ((k) & 0x1f)
 
@@ -498,6 +499,8 @@ void editorMoveCursor(int key) {
 }
 
 void editorProcessKeypress() {
+  static int quit_times = KILO_QUIT_TIMES;
+
   int c = editorReadKey();
 
   switch (c) {
@@ -506,6 +509,12 @@ void editorProcessKeypress() {
       break;
 
     case CTRL_KEY('q'):
+      if (E.dirty && quit_times > 0) {
+        editorSetStatusMessage("WARNING!!! File has unsaved changes. "
+          "Press Ctrl-Q %d more times to quit.", quit_times);
+        quit_times--;
+        return;
+      }
       write(STDOUT_FILENO, "\x1b[2J", 4);
       write(STDOUT_FILENO, "\x1b[H", 3);
       exit(0);
@@ -561,6 +570,8 @@ void editorProcessKeypress() {
       editorInsertChar(c);
       break;
   }
+
+  quit_times = KILO_QUIT_TIMES;
 }
 
 /*** init ***/

~~~

row-del-char c1

diff --git a/kilo.c b/kilo.c
index aa8dafc..399e83b 100644
--- a/kilo.c
+++ b/kilo.c
@@ -243,6 +243,14 @@ void editorRowInsertChar(erow *row, int at, int c) {
   E.dirty++;
 }
 
+void editorRowDelChar(erow *row, int at) {
+  if (at < 0 || at >= row->size) return;
+  memmove(&row->chars[at], &row->chars[at + 1], row->size - at);
+  row->size--;
+  editorUpdateRow(row);
+  E.dirty++;
+}
+
 /*** editor operations ***/
 
 void editorInsertChar(int c) {

~~~

editor-del-char c1

diff --git a/kilo.c b/kilo.c
index 399e83b..70c08f1 100644
--- a/kilo.c
+++ b/kilo.c
@@ -261,6 +261,16 @@ void editorInsertChar(int c) {
   E.cx++;
 }
 
+void editorDelChar() {
+  if (E.cy == E.numrows) return;
+
+  erow *row = &E.row[E.cy];
+  if (E.cx > 0) {
+    editorRowDelChar(row, E.cx - 1);
+    E.cx--;
+  }
+}
+
 /*** file i/o ***/
 
 char *editorRowsToString(int *buflen) {

~~~

key-del-char c2

diff --git a/kilo.c b/kilo.c
index 70c08f1..b0836d8 100644
--- a/kilo.c
+++ b/kilo.c
@@ -554,7 +554,8 @@ void editorProcessKeypress() {
     case BACKSPACE:
     case CTRL_KEY('h'):
     case DEL_KEY:
-      /* TODO */
+      if (c == DEL_KEY) editorMoveCursor(ARROW_RIGHT);
+      editorDelChar();
       break;
 
     case PAGE_UP:

~~~

del-row c1

diff --git a/kilo.c b/kilo.c
index b0836d8..7051fe8 100644
--- a/kilo.c
+++ b/kilo.c
@@ -233,6 +233,19 @@ void editorAppendRow(char *s, size_t len) {
   E.dirty++;
 }
 
+void editorFreeRow(erow *row) {
+  free(row->render);
+  free(row->chars);
+}
+
+void editorDelRow(int at) {
+  if (at < 0 || at >= E.numrows) return;
+  editorFreeRow(&E.row[at]);
+  memmove(&E.row[at], &E.row[at + 1], sizeof(erow) * (E.numrows - at - 1));
+  E.numrows--;
+  E.dirty++;
+}
+
 void editorRowInsertChar(erow *row, int at, int c) {
   if (at < 0 || at > row->size) at = row->size;
   row->chars = realloc(row->chars, row->size + 2);

~~~

row-append-string c1

diff --git a/kilo.c b/kilo.c
index 7051fe8..e9f560d 100644
--- a/kilo.c
+++ b/kilo.c
@@ -256,6 +256,15 @@ void editorRowInsertChar(erow *row, int at, int c) {
   E.dirty++;
 }
 
+void editorRowAppendString(erow *row, char *s, size_t len) {
+  row->chars = realloc(row->chars, row->size + len + 1);
+  memcpy(&row->chars[row->size], s, len);
+  row->size += len;
+  row->chars[row->size] = '\0';
+  editorUpdateRow(row);
+  E.dirty++;
+}
+
 void editorRowDelChar(erow *row, int at) {
   if (at < 0 || at >= row->size) return;
   memmove(&row->chars[at], &row->chars[at + 1], row->size - at);

~~~

del-char-row c2

diff --git a/kilo.c b/kilo.c
index e9f560d..6dcfa84 100644
--- a/kilo.c
+++ b/kilo.c
@@ -285,11 +285,17 @@ void editorInsertChar(int c) {
 
 void editorDelChar() {
   if (E.cy == E.numrows) return;
+  if (E.cx == 0 && E.cy == 0) return;
 
   erow *row = &E.row[E.cy];
   if (E.cx > 0) {
     editorRowDelChar(row, E.cx - 1);
     E.cx--;
+  } else {
+    E.cx = E.row[E.cy - 1].size;
+    editorRowAppendString(&E.row[E.cy - 1], row->chars, row->size);
+    editorDelRow(E.cy);
+    E.cy--;
   }
 }
 

~~~

append-to-insert c0

diff --git a/kilo.c b/kilo.c
index 6dcfa84..7593e2a 100644
--- a/kilo.c
+++ b/kilo.c
@@ -216,10 +216,12 @@ void editorUpdateRow(erow *row) {
   row->rsize = idx;
 }
 
-void editorAppendRow(char *s, size_t len) {
+void editorInsertRow(int at, char *s, size_t len) {
+  if (at < 0 || at > E.numrows) return;
+
   E.row = realloc(E.row, sizeof(erow) * (E.numrows + 1));
+  memmove(&E.row[at + 1], &E.row[at], sizeof(erow) * (E.numrows - at));
 
-  int at = E.numrows;
   E.row[at].size = len;
   E.row[at].chars = malloc(len + 1);
   memcpy(E.row[at].chars, s, len);

~~~

use-insert-row c1

diff --git a/kilo.c b/kilo.c
index 7593e2a..46033f1 100644
--- a/kilo.c
+++ b/kilo.c
@@ -279,7 +279,7 @@ void editorRowDelChar(erow *row, int at) {
 
 void editorInsertChar(int c) {
   if (E.cy == E.numrows) {
-    editorAppendRow("", 0);
+    editorInsertRow(E.numrows, "", 0);
   }
   editorRowInsertChar(&E.row[E.cy], E.cx, c);
   E.cx++;
@@ -336,7 +336,7 @@ void editorOpen(char *filename) {
     while (linelen > 0 && (line[linelen - 1] == '\n' ||
                            line[linelen - 1] == '\r'))
       linelen--;
-    editorAppendRow(line, linelen);
+    editorInsertRow(E.numrows, line, linelen);
   }
   free(line);
   fclose(fp);

~~~

insert-newline c1

diff --git a/kilo.c b/kilo.c
index 46033f1..32221aa 100644
--- a/kilo.c
+++ b/kilo.c
@@ -285,6 +285,21 @@ void editorInsertChar(int c) {
   E.cx++;
 }
 
+void editorInsertNewline() {
+  if (E.cx == 0) {
+    editorInsertRow(E.cy, "", 0);
+  } else {
+    erow *row = &E.row[E.cy];
+    editorInsertRow(E.cy + 1, &row->chars[E.cx], row->size - E.cx);
+    row = &E.row[E.cy];
+    row->size = E.cx;
+    row->chars[row->size] = '\0';
+    editorUpdateRow(row);
+  }
+  E.cy++;
+  E.cx = 0;
+}
+
 void editorDelChar() {
   if (E.cy == E.numrows) return;
   if (E.cx == 0 && E.cy == 0) return;

~~~

enter-key c2

diff --git a/kilo.c b/kilo.c
index 32221aa..9fa82e3 100644
--- a/kilo.c
+++ b/kilo.c
@@ -568,7 +568,7 @@ void editorProcessKeypress() {
 
   switch (c) {
     case '\r':
-      /* TODO */
+      editorInsertNewline();
       break;
 
     case CTRL_KEY('q'):

~~~

prompt c1

diff --git a/kilo.c b/kilo.c
index 9fa82e3..ea1915b 100644
--- a/kilo.c
+++ b/kilo.c
@@ -68,6 +68,7 @@ struct editorConfig E;
 /*** prototypes ***/
 
 void editorSetStatusMessage(const char *fmt, ...);
+void editorRefreshScreen();
 
 /*** terminal ***/
 
@@ -522,6 +523,34 @@ void editorSetStatusMessage(const char *fmt, ...) {
 
 /*** input ***/
 
+char *editorPrompt(char *prompt) {
+  size_t bufsize = 128;
+  char *buf = malloc(bufsize);
+
+  size_t buflen = 0;
+  buf[0] = '\0';
+
+  while (1) {
+    editorSetStatusMessage(prompt, buf);
+    editorRefreshScreen();
+
+    int c = editorReadKey();
+    if (c == '\r') {
+      if (buflen != 0) {
+        editorSetStatusMessage("");
+        return buf;
+      }
+    } else if (!iscntrl(c) && c < 128) {
+      if (buflen == bufsize - 1) {
+        bufsize *= 2;
+        buf = realloc(buf, bufsize);
+      }
+      buf[buflen++] = c;
+      buf[buflen] = '\0';
+    }
+  }
+}
+
 void editorMoveCursor(int key) {
   erow *row = (E.cy >= E.numrows) ? NULL : &E.row[E.cy];
 

~~~

save-as c2

diff --git a/kilo.c b/kilo.c
index ea1915b..6bd9a1b 100644
--- a/kilo.c
+++ b/kilo.c
@@ -69,6 +69,7 @@ struct editorConfig E;
 
 void editorSetStatusMessage(const char *fmt, ...);
 void editorRefreshScreen();
+char *editorPrompt(char *prompt);
 
 /*** terminal ***/
 
@@ -360,7 +361,9 @@ void editorOpen(char *filename) {
 }
 
 void editorSave() {
-  if (E.filename == NULL) return;
+  if (E.filename == NULL) {
+    E.filename = editorPrompt("Save as: %s");
+  }
 
   int len;
   char *buf = editorRowsToString(&len);

~~~

prompt-escape c2

diff --git a/kilo.c b/kilo.c
index 6bd9a1b..972f8ff 100644
--- a/kilo.c
+++ b/kilo.c
@@ -538,7 +538,11 @@ char *editorPrompt(char *prompt) {
     editorRefreshScreen();
 
     int c = editorReadKey();
-    if (c == '\r') {
+    if (c == '\x1b') {
+      editorSetStatusMessage("");
+      free(buf);
+      return NULL;
+    } else if (c == '\r') {
       if (buflen != 0) {
         editorSetStatusMessage("");
         return buf;

~~~

abort-save c2

diff --git a/kilo.c b/kilo.c
index 972f8ff..e71f2c1 100644
--- a/kilo.c
+++ b/kilo.c
@@ -362,7 +362,11 @@ void editorOpen(char *filename) {
 
 void editorSave() {
   if (E.filename == NULL) {
-    E.filename = editorPrompt("Save as: %s");
+    E.filename = editorPrompt("Save as: %s (ESC to cancel)");
+    if (E.filename == NULL) {
+      editorSetStatusMessage("Save aborted");
+      return;
+    }
   }
 
   int len;

~~~

prompt-backspace c2

diff --git a/kilo.c b/kilo.c
index e71f2c1..cce71c2 100644
--- a/kilo.c
+++ b/kilo.c
@@ -542,7 +542,9 @@ char *editorPrompt(char *prompt) {
     editorRefreshScreen();
 
     int c = editorReadKey();
-    if (c == '\x1b') {
+    if (c == DEL_KEY || c == CTRL_KEY('h') || c == BACKSPACE) {
+      if (buflen != 0) buf[--buflen] = '\0';
+    } else if (c == '\x1b') {
       editorSetStatusMessage("");
       free(buf);
       return NULL;

